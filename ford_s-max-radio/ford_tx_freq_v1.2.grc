options:
  parameters:
    author: kesenheimer
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: FSK
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: FSK 2-channel TX
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: bits_per_second
  id: variable
  parameters:
    comment: ''
    value: '4166'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [280, 8.0]
    rotation: 0
    state: true
- name: freq
  id: variable
  parameters:
    comment: ''
    value: '433930000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [504, 8.0]
    rotation: 0
    state: true
- name: freq_offset
  id: variable
  parameters:
    comment: ''
    value: '330000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 8.0]
    rotation: 0
    state: enabled
- name: freq_spread
  id: variable
  parameters:
    comment: Distance of the two fsk frequencies
    value: '20000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 8.0]
    rotation: 0
    state: true
- name: padding
  id: variable
  parameters:
    comment: ''
    value: 16 * "\xff"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [912, 8.0]
    rotation: 0
    state: true
- name: payload
  id: variable
  parameters:
    comment: ''
    value: str("\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x55\x35\x55\x4c\xb5\x2b\x34\xb4\xb3\x2d\x4b\x2b\x53\x4a\xab\x32\xaa\xb2\xb5\x2c\xd2\xd3\x54\xab\x52\xb5\x4b\x41\xff")
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [664, 8.0]
    rotation: 0
    state: true
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '10000000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 8.0]
    rotation: 0
    state: enabled
- name: samples_per_packet
  id: variable
  parameters:
    comment: ''
    value: int(samp_rate/bits_per_second) * 8 * len(payload)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 8.0]
    rotation: 0
    state: true
- name: samples_per_padding
  id: variable
  parameters:
    comment: ''
    value: int(samp_rate/bits_per_second) * 8 * len(padding)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [808, 64.0]
    rotation: 0
    state: true
- name: sensitivity
  id: variable
  parameters:
    comment: ''
    value: 2 * math.pi * freq_spread
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 392.0]
    rotation: 0
    state: true
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '0'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    showports: 'True'
    type: complex
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 228.0]
    rotation: 0
    state: true
- name: blocks_add_const_vxx_0
  id: blocks_add_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: 2 * math.pi * (- freq_spread / 2) / sensitivity
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [832, 140.0]
    rotation: 0
    state: true
- name: blocks_multiply_const_vxx_0
  id: blocks_multiply_const_vxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    const: 2 * math.pi * freq_spread / sensitivity
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [704, 140.0]
    rotation: 0
    state: true
- name: blocks_multiply_xx_0
  id: blocks_multiply_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_inputs: '2'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [480, 300.0]
    rotation: 0
    state: true
- name: blocks_repeat_0
  id: blocks_repeat
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    interp: int(samp_rate/bits_per_second)
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [144, 332.0]
    rotation: 0
    state: true
- name: blocks_stream_to_tagged_stream_0
  id: blocks_stream_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    len_tag_key: '"packet_len"'
    maxoutbuf: '0'
    minoutbuf: '0'
    packet_len: samples_per_packet + 2 * samples_per_padding
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 312.0]
    rotation: 0
    state: true
- name: blocks_uchar_to_float_0
  id: blocks_uchar_to_float
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [568, 140.0]
    rotation: 0
    state: true
- name: blocks_unpack_k_bits_bb_0
  id: blocks_unpack_k_bits_bb
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    k: '8'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 140.0]
    rotation: 0
    state: true
- name: blocks_vco_c_0
  id: blocks_vco_c
  parameters:
    affinity: ''
    alias: ''
    amplitude: '1'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    sensitivity: "sensitivity\t\t"
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 324.0]
    rotation: 0
    state: true
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nSynchronized fsk message block\n\"\"\"\n\n#  epy_block_0.py\n\
      #  created 10/17/2019\n\nimport numpy as np\nfrom gnuradio import gr\nimport\
      \ pmt\nimport threading\nimport time\n\nrun = 1\n\nclass fsk_message_sync_block(gr.sync_block):\n\
      \    def __init__(self, payload: str = \"\", freq_offset: int = 0, period: int\
      \ = 1000, pause: int = 50):\n        gr.sync_block.__init__(self,\n        \
      \    name = \"Synchronized FSK message block\",\n            in_sig = None,\n\
      \            out_sig = None) # [np.byte]\n        self.message_port_register_in(pmt.intern('msg_in'))\n\
      \        self.message_port_register_out(pmt.intern('freq'))\n        self.message_port_register_out(pmt.intern('payload'))\n\
      \        self.set_msg_handler(pmt.intern('msg_in'), self.handle_msg)\n     \
      \   self.payload = payload\n        self.freq_offset = freq_offset\n       \
      \ self.period = period\n        self.pause = pause\n\n    def start(self):\n\
      \        self.x = threading.Thread(target=self.run, args=())\n        print(\"\
      Starting FSK payload generation thread\")\n        self.x.start()\n\n    def\
      \ stop(self):\n        print(\"Stopping FSK payload generation thread\")\n \
      \       global run\n        run = 0\n        self.x.join()\n        return True\n\
      \n    def handle_msg(self, msg):\n        print(msg)\n    \n    def work(self,\
      \ input_items, output_items):\n        #_len = len(self.payload)\n        #if\
      \ _len > 0:\n        #    for x in range(_len):\n        #        output_items[0][x]\
      \ = ord(self.payload[x])\n        #        return (_len)\n        #else:\n \
      \       #    return 0\n        pass\n\n    def send_payload(self, freq_offset):\n\
      \        freq_msg = pmt.dict_add(pmt.make_dict(), pmt.intern(\"freq\"), pmt.from_double(freq_offset))\n\
      \        payload_bytes = [ord(i) for i in self.payload]\n        payload_msg\
      \ = pmt.cons(pmt.PMT_NIL, pmt.init_u8vector(len(payload_bytes), payload_bytes))\n\
      \        self.message_port_pub(pmt.intern('freq'), freq_msg)\n        self.message_port_pub(pmt.intern('payload'),\
      \ payload_msg)\n\n    def run(self):\n        global run\n        while run:\n\
      \            self.send_payload(self.freq_offset)\n            time.sleep(self.pause\
      \ / 1000)\n            self.send_payload(-self.freq_offset)\n            time.sleep(self.pause\
      \ / 1000)\n            self.send_payload(self.freq_offset)\n            time.sleep(self.period\
      \ / 1000)"
    affinity: ''
    alias: ''
    comment: ''
    freq_offset: freq_offset
    maxoutbuf: '0'
    minoutbuf: '0'
    pause: '500'
    payload: padding + payload + padding
    period: '1000'
  states:
    _io_cache: ('Synchronized FSK message block', 'fsk_message_sync_block', [('payload',
      "''"), ('freq_offset', '0'), ('period', '1000'), ('pause', '50')], [('msg_in',
      'message', 1)], [('payload', 'message', 1), ('freq', 'message', 1)], '', ['freq_offset',
      'pause', 'payload', 'period'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 132.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 8.0]
    rotation: 0
    state: true
- name: import_0_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import numpy as np
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1040, 8.0]
    rotation: 0
    state: true
- name: pdu_pdu_to_stream_x_0
  id: pdu_pdu_to_stream_x
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    depth: len(payload) + 2 * len(padding)
    early_behavior: pdu.EARLY_BURST_APPEND
    maxoutbuf: '0'
    minoutbuf: '0'
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 92.0]
    rotation: 0
    state: true
- name: pdu_pdu_to_tagged_stream_0
  id: pdu_pdu_to_tagged_stream
  parameters:
    affinity: ''
    alias: ''
    comment: Note maxoutbuf / minoutbuf = len(payload)
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: packet_len
    type: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [288, 140.0]
    rotation: 0
    state: disabled
- name: qtgui_sink_x_0
  id: qtgui_sink_x
  parameters:
    affinity: ''
    alias: ''
    bw: samp_rate
    comment: ''
    fc: freq
    fftsize: '1024'
    gui_hint: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    plotconst: 'True'
    plotfreq: 'True'
    plottime: 'True'
    plotwaterfall: 'True'
    rate: '10'
    showports: 'False'
    showrf: 'False'
    type: complex
    wintype: window.WIN_BLACKMAN_hARRIS
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 344.0]
    rotation: 0
    state: true
- name: soapy_hackrf_sink_0
  id: soapy_hackrf_sink
  parameters:
    affinity: ''
    alias: ''
    amp: 'False'
    bandwidth: samp_rate
    center_freq: freq
    comment: ''
    dev_args: ''
    samp_rate: samp_rate
    type: fc32
    vga: '30'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [768, 268.0]
    rotation: 0
    state: enabled
- name: virtual_sink_0
  id: virtual_sink
  parameters:
    alias: ''
    comment: ''
    stream_id: data0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [952, 140.0]
    rotation: 0
    state: true
- name: virtual_source_0
  id: virtual_source
  parameters:
    alias: ''
    comment: ''
    stream_id: data0
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [24, 332.0]
    rotation: 0
    state: true
- name: xmlrpc_server_0
  id: xmlrpc_server
  parameters:
    addr: localhost
    alias: ''
    comment: ''
    port: '8080'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [576, 8.0]
    rotation: 0
    state: true

connections:
- [analog_sig_source_x_0, '0', blocks_multiply_xx_0, '0']
- [blocks_add_const_vxx_0, '0', virtual_sink_0, '0']
- [blocks_multiply_const_vxx_0, '0', blocks_add_const_vxx_0, '0']
- [blocks_multiply_xx_0, '0', blocks_stream_to_tagged_stream_0, '0']
- [blocks_repeat_0, '0', blocks_vco_c_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', qtgui_sink_x_0, '0']
- [blocks_stream_to_tagged_stream_0, '0', soapy_hackrf_sink_0, '0']
- [blocks_uchar_to_float_0, '0', blocks_multiply_const_vxx_0, '0']
- [blocks_unpack_k_bits_bb_0, '0', blocks_uchar_to_float_0, '0']
- [blocks_vco_c_0, '0', blocks_multiply_xx_0, '1']
- [epy_block_0, freq, analog_sig_source_x_0, cmd]
- [epy_block_0, payload, pdu_pdu_to_stream_x_0, pdus]
- [epy_block_0, payload, pdu_pdu_to_tagged_stream_0, pdus]
- [pdu_pdu_to_stream_x_0, '0', blocks_unpack_k_bits_bb_0, '0']
- [pdu_pdu_to_tagged_stream_0, '0', blocks_unpack_k_bits_bb_0, '0']
- [virtual_source_0, '0', blocks_repeat_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.8.0
